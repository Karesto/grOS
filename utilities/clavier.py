
#kbrd_map = [[0,0,"","",""]] * 256

azerty = [[7, 21, 'Error', '', ''], [0, 0, 'Esc', '', ''], [1, 1, '&', '1', ''], [1, 2, 'é', '2', ''],\
            [1, 3, '"', '3', '#'], [1, 4, "'", '4', '{'], [1, 5, '(', '5', '['], [1, 6, '-', '6', '|'], \
            [1, 7, 'è', '7', '`'], [1, 8, '_', '8', '\\'], [1, 9, 'ç', '9', '^'], [1, 10, 'à', '0', '@'],\
            [1, 11, ')', '°', ']'], [1, 12, '=', '+', '}'], [1, 13, 'Backspace', '', ''], \
            [2, 0, 'Tab', '', ''], [2, 1, 'a', 'A', ''], [2, 2, 'z', 'Z', ''],\
            [2, 3, 'e', 'E', ''], [2, 4, 'r', 'R', ''], [2, 5, 't', 'T', ''], [2, 6, 'y', 'Y', ''],\
            [2, 7, 'u', 'U', ''], [2, 8, 'i', 'I', ''], [2, 9, 'o', 'O', ''], [2, 10, 'p', 'P', ''],\
            [2, 11, '^', '¨', ''], [2, 12, '$', '£', '¤'], [7, 21, '', '', ''], [5, 0, 'Ctrl G', '', ''],\
            [3, 1, 'q', 'Q', ''], [3, 2, 's', 'S', ''], [3, 3, 'd', 'D', ''], [3, 4, 'f', 'F', ''],\
            [3, 5, 'g', 'G', ''], [3, 6, 'h', 'H', ''], [3, 7, 'j', 'J', ''], [3, 8, 'k', 'K', ''],\
            [3, 9, 'l', 'L', ''], [3, 10, 'm', 'M', ''], [3, 11, 'ù', '%', ''], [1, 0, '²', '', ''],\
            [4, 0, 'Maj G', '', ''], [3, 12, '*', 'µ', ''], [4, 2, 'w', 'W', ''], [4, 3, 'x', 'X', ''],\
            [4, 4, 'c', 'C', ''], [4, 5, 'v', 'V', ''], [4, 6, 'b', 'B', ''], [4, 7, 'n', 'N', ''],\
            [4, 8, ',', '?', ''], [4, 9, ';', '.', ''], [4, 10, ':', '/', ''], [4, 11, '!', '§', ''],\
            [4, 12, 'Maj D', '', ''], [1, 19, '*', '', ''], [5, 3, 'Alt G', '', ''], \
            [5, 4, 'Espace', '', ''], [3, 0, 'Verr Maj', '', ''], [0, 1, 'F1', '', ''], [0, 2, 'F2', '', ''],\
            [0, 3, 'F3', '', ''], [0, 4, 'F4', '', ''], [0, 5, 'F5', '', ''], [0, 6, 'F6', '', ''],\
            [0, 7, 'F7', '', ''], [0, 8, 'F8', '', ''], [0, 9, 'F9', '', ''], [0, 10, 'F10', '', ''],\
            [1, 17, 'Verr Num', '', ''], [7, 21, '', '', ''], [2, 17, '7', '', ''], [2, 18, '8', '', ''],\
            [2, 19, '9', '', ''], [1, 20, '-', '', ''], [3, 17, '4', '', ''], [3, 18, '5', '', ''],\
            [3, 19, '6', '', ''], [2, 20, '+', '', ''], [4, 17, '1', '', ''], [4, 18, '2', '', ''],\
            [4, 19, '3', '', ''], [5, 17, '0', '', ''], [5, 19, '.', '', ''], [7, 21, '', '', ''],\
            [7, 21, '', '', ''], [4, 1, '<', '>', ''], [0, 11, 'F11', '', ''], [0, 12, 'F12', '', ''],\
            [7, 21, '', '', ''], [7, 21, '', '', ''], [7, 21, '', '', ''], [7, 21, '', '', ''],\
            [7, 21, '', '', ''], [7, 21, '', '', ''], [7, 21, '', '', ''], [7, 21, '', '', ''],\
            [7, 21, '', '', ''], [7, 21, '', '', ''], [7, 21, '', '', ''], [7, 21, '', '', ''],\
            [7, 21, '', '', ''], [7, 21, '', '', ''], [7, 21, '', '', ''], [7, 21, '', '', ''],\
            [7, 21, '', '', ''], [7, 21, '', '', ''], [7, 21, '', '', ''], [7, 21, '', '', ''],\
            [7, 21, '', '', ''], [7, 21, '', '', ''], [7, 21, '', '', ''], [7, 21, '', '', ''],\
            [7, 21, '', '', ''], [7, 21, '', '', ''], [7, 21, '', '', ''], [7, 21, '', '', ''],\
            [7, 21, '', '', ''], [7, 21, '', '', ''], [7, 21, '', '', ''], [7, 21, '', '', ''],\
            [7, 21, '', '', ''], [7, 21, '', '', ''], [7, 21, '', '', ''], [7, 21, '', '', ''],\
            [7, 21, '', '', ''], [7, 21, '', '', ''], [7, 21, '', '', ''], [7, 21, '', '', ''],\
            [7, 21, '', '', ''], [7, 21, '', '', ''], [7, 21, '', '', ''], [7, 21, '', '', ''],\
            [7, 21, '', '', ''], [7, 21, '', '', ''], [7, 21, '', '', ''], [7, 21, '', '', ''],\
            [7, 21, '', '', ''], [7, 21, '', '', ''], [7, 21, '', '', ''], [7, 21, '', '', ''],\
            [7, 21, '', '', ''], [7, 21, '', '', ''], [7, 21, '', '', ''], [7, 21, '', '', ''],\
            [7, 21, '', '', ''], [7, 21, '', '', ''], [7, 21, '', '', ''], [7, 21, '', '', ''],\
            [7, 21, '', '', ''], [7, 21, '', '', ''], [7, 21, '', '', ''], [7, 21, '', '', ''],\
            [7, 21, '', '', ''], [7, 21, '', '', ''], [7, 21, '', '', ''], [4, 20, 'Entree Pav Num', '', ''],\
            [5, 6, 'Ctrl D', '', ''], [7, 21, '', '', ''], [7, 21, '', '', ''], [7, 21, '', '', ''],\
            [7, 21, '', '', ''], [7, 21, '', '', ''], [7, 21, '', '', ''], [7, 21, '', '', ''],\
            [7, 21, '', '', ''], [7, 21, '', '', ''], [7, 21, '', '', ''], [7, 21, '', '', ''],\
            [7, 21, '', '', ''], [7, 21, '', '', ''], [7, 21, '', '', ''], [7, 21, '', '', ''],\
            [7, 21, '', '', ''], [7, 21, '', '', ''], [7, 21, '', '', ''], [7, 21, '', '', ''],\
            [7, 21, '', '', ''], [7, 21, '', '', ''], [7, 21, '', '', ''], [7, 21, '', '', ''],\
            [1, 18, '/', '', ''], [7, 21, '', '', ''], [7, 21, '', '', ''], [5, 5, 'Alt Gr', '', ''],\
            [7, 21, '', '', ''], [7, 21, '', '', ''], [7, 21, '', '', ''], [7, 21, '', '', ''],\
            [7, 21, '', '', ''], [7, 21, '', '', ''], [7, 21, '', '', ''], [7, 21, '', '', ''],\
            [7, 21, '', '', ''], [7, 21, '', '', ''], [7, 21, '', '', ''], [7, 21, '', '', ''],\
            [7, 21, '', '', ''], [7, 21, '', '', ''], [1, 15, 'Home', '', ''], [4, 15, 'Flch H', '', ''],\
            [1, 16, 'Pg U', '', ''], [7, 21, '', '', ''], [5, 14, 'Flch G', '', ''], [7, 21, '', '', ''],\
            [5, 16, 'Flch D', '', ''], [7, 21, '', '', ''], [7, 21, '', '', ''], [5, 15, 'Flch B', '', ''],\
            [2, 16, 'Pg B', '', ''], [1, 14, 'Inser', '', ''], [2, 14, 'Suppr', '', ''], [7, 21, '', '', ''],\
            [7, 21, '', '', ''], [7, 21, '', '', ''], [7, 21, '', '', ''], [7, 21, '', '', ''],\
            [7, 21, '', '', ''], [7, 21, '', '', ''], [7, 21, '', '', ''], [7, 21, '', '', ''],\
            [7, 21, '', '', ''], [7, 21, '', '', ''], [7, 21, '', '', ''], [7, 21, '', '', ''],\
            [7, 21, '', '', ''], [7, 21, '', '', ''], [7, 21, '', '', ''], [7, 21, '', '', ''],\
            [7, 21, '', '', ''], [7, 21, '', '', ''], [7, 21, '', '', ''], [7, 21, '', '', ''],\
            [7, 21, '', '', ''], [7, 21, '', '', ''], [7, 21, '', '', ''], [7, 21, '', '', ''],\
            [7, 21, '', '', ''], [7, 21, '', '', ''], [7, 21, '', '', ''], [7, 21, '', '', ''],\
            [7, 21, '', '', ''], [7, 21, '', '', ''], [7, 21, '', '', ''], [7, 21, '', '', ''],\
            [7, 21, '', '', ''], [7, 21, '', '', ''], [7, 21, '', '', ''], [7, 21, '', '', ''],\
            [7, 21, '', '', ''], [7, 21, '', '', ''], [7, 21, '', '', ''], [7, 21, '', '', ''],\
            [7, 21, '', '', ''], [7, 21, '', '', ''], [7, 21, '', '', '']]

qwerty =  [[7, 21, 'Error', '', ''], [0, 0, 'Esc', '', ''], [1, 1, '1', '!', ''], [1, 2, '2', '@', ''],\
            [1, 3, '3', '#', ''], [1, 4, "4", '$', ''], [1, 5, '5', '%', ''], [1, 6, '6', '^', ''], \
            [1, 7, '7', '&', ''], [1, 8, '8', '*', ''], [1, 9, '9', '(', ''], [1, 10, '0', ')', ''],\
            [1, 11, '-', '_', ''], [1, 12, '=', '+', ''], [1, 13, 'Backspace', '', ''], \
            [2, 0, 'Tab', '', ''], [2, 1, 'q', 'Q', ''], [2, 2, 'w', 'W', ''],\
            [2, 3, 'e', 'E', ''], [2, 4, 'r', 'R', ''], [2, 5, 't', 'T', ''], [2, 6, 'y', 'Y', ''],\
            [2, 7, 'u', 'U', ''], [2, 8, 'i', 'I', ''], [2, 9, 'o', 'O', ''], [2, 10, 'p', 'P', ''],\
            [2, 11, '[', '{', ''], [2, 12, ']', '}', ''], [7, 21, '', '', ''], [5, 0, 'Ctrl G', '', ''],\
            [3, 1, 'a', 'A', ''], [3, 2, 's', 'S', ''], [3, 3, 'd', 'D', ''], [3, 4, 'f', 'F', ''],\
            [3, 5, 'g', 'G', ''], [3, 6, 'h', 'H', ''], [3, 7, 'j', 'J', ''], [3, 8, 'k', 'K', ''],\
            [3, 9, 'l', 'L', ''], [3, 10, ';', ':', ''], [3, 11, "'", '"', ''], [1, 0, '`', '~', ''],\
            [4, 0, 'Maj G', '', ''], [3, 12, '\\', '|', ''], [4, 2, 'z', 'Z', ''], [4, 3, 'x', 'X', ''],\
            [4, 4, 'c', 'C', ''], [4, 5, 'v', 'V', ''], [4, 6, 'b', 'B', ''], [4, 7, 'n', 'N', ''],\
            [4, 8, 'm', 'M', ''], [4, 9, ',', '<', ''], [4, 10, '.', '>', ''], [4, 11, '/', '?', ''],\
            [4, 12, 'Maj D', '', ''], [1, 19, '*', '', ''], [5, 3, 'Alt G', '', ''], \
            [5, 4, 'Espace', '', ''], [3, 0, 'Verr Maj', '', ''], [0, 1, 'F1', '', ''], [0, 2, 'F2', '', ''],\
            [0, 3, 'F3', '', ''], [0, 4, 'F4', '', ''], [0, 5, 'F5', '', ''], [0, 6, 'F6', '', ''],\
            [0, 7, 'F7', '', ''], [0, 8, 'F8', '', ''], [0, 9, 'F9', '', ''], [0, 10, 'F10', '', ''],\
            [1, 17, 'Verr Num', '', ''], [7, 21, '', '', ''], [2, 17, '7', '', ''], [2, 18, '8', '', ''],\
            [2, 19, '9', '', ''], [1, 20, '-', '', ''], [3, 17, '4', '', ''], [3, 18, '5', '', ''],\
            [3, 19, '6', '', ''], [2, 20, '+', '', ''], [4, 17, '1', '', ''], [4, 18, '2', '', ''],\
            [4, 19, '3', '', ''], [5, 17, '0', '', ''], [5, 19, '.', '', ''], [7, 21, '', '', ''],\
            [7, 21, '', '', ''], [4, 1, '<', '>', ''], [0, 11, 'F11', '', ''], [0, 12, 'F12', '', ''],\
            [7, 21, '', '', ''], [7, 21, '', '', ''], [7, 21, '', '', ''], [7, 21, '', '', ''],\
            [7, 21, '', '', ''], [7, 21, '', '', ''], [7, 21, '', '', ''], [7, 21, '', '', ''],\
            [7, 21, '', '', ''], [7, 21, '', '', ''], [7, 21, '', '', ''], [7, 21, '', '', ''],\
            [7, 21, '', '', ''], [7, 21, '', '', ''], [7, 21, '', '', ''], [7, 21, '', '', ''],\
            [7, 21, '', '', ''], [7, 21, '', '', ''], [7, 21, '', '', ''], [7, 21, '', '', ''],\
            [7, 21, '', '', ''], [7, 21, '', '', ''], [7, 21, '', '', ''], [7, 21, '', '', ''],\
            [7, 21, '', '', ''], [7, 21, '', '', ''], [7, 21, '', '', ''], [7, 21, '', '', ''],\
            [7, 21, '', '', ''], [7, 21, '', '', ''], [7, 21, '', '', ''], [7, 21, '', '', ''],\
            [7, 21, '', '', ''], [7, 21, '', '', ''], [7, 21, '', '', ''], [7, 21, '', '', ''],\
            [7, 21, '', '', ''], [7, 21, '', '', ''], [7, 21, '', '', ''], [7, 21, '', '', ''],\
            [7, 21, '', '', ''], [7, 21, '', '', ''], [7, 21, '', '', ''], [7, 21, '', '', ''],\
            [7, 21, '', '', ''], [7, 21, '', '', ''], [7, 21, '', '', ''], [7, 21, '', '', ''],\
            [7, 21, '', '', ''], [7, 21, '', '', ''], [7, 21, '', '', ''], [7, 21, '', '', ''],\
            [7, 21, '', '', ''], [7, 21, '', '', ''], [7, 21, '', '', ''], [7, 21, '', '', ''],\
            [7, 21, '', '', ''], [7, 21, '', '', ''], [7, 21, '', '', ''], [7, 21, '', '', ''],\
            [7, 21, '', '', ''], [7, 21, '', '', ''], [7, 21, '', '', ''], [7, 21, '', '', ''],\
            [7, 21, '', '', ''], [7, 21, '', '', ''], [7, 21, '', '', ''], [4, 20, 'Entree Pav Num', '', ''],\
            [5, 6, 'Ctrl D', '', ''], [7, 21, '', '', ''], [7, 21, '', '', ''], [7, 21, '', '', ''],\
            [7, 21, '', '', ''], [7, 21, '', '', ''], [7, 21, '', '', ''], [7, 21, '', '', ''],\
            [7, 21, '', '', ''], [7, 21, '', '', ''], [7, 21, '', '', ''], [7, 21, '', '', ''],\
            [7, 21, '', '', ''], [7, 21, '', '', ''], [7, 21, '', '', ''], [7, 21, '', '', ''],\
            [7, 21, '', '', ''], [7, 21, '', '', ''], [7, 21, '', '', ''], [7, 21, '', '', ''],\
            [7, 21, '', '', ''], [7, 21, '', '', ''], [7, 21, '', '', ''], [7, 21, '', '', ''],\
            [1, 18, '/', '', ''], [7, 21, '', '', ''], [7, 21, '', '', ''], [5, 5, 'Alt Gr', '', ''],\
            [7, 21, '', '', ''], [7, 21, '', '', ''], [7, 21, '', '', ''], [7, 21, '', '', ''],\
            [7, 21, '', '', ''], [7, 21, '', '', ''], [7, 21, '', '', ''], [7, 21, '', '', ''],\
            [7, 21, '', '', ''], [7, 21, '', '', ''], [7, 21, '', '', ''], [7, 21, '', '', ''],\
            [7, 21, '', '', ''], [7, 21, '', '', ''], [1, 15, 'Home', '', ''], [4, 15, 'Flch H', '', ''],\
            [1, 16, 'Pg U', '', ''], [7, 21, '', '', ''], [5, 14, 'Flch G', '', ''], [7, 21, '', '', ''],\
            [5, 16, 'Flch D', '', ''], [7, 21, '', '', ''], [7, 21, '', '', ''], [5, 15, 'Flch B', '', ''],\
            [2, 16, 'Pg B', '', ''], [1, 14, 'Inser', '', ''], [2, 14, 'Suppr', '', ''], [7, 21, '', '', ''],\
            [7, 21, '', '', ''], [7, 21, '', '', ''], [7, 21, '', '', ''], [7, 21, '', '', ''],\
            [7, 21, '', '', ''], [7, 21, '', '', ''], [7, 21, '', '', ''], [7, 21, '', '', ''],\
            [7, 21, '', '', ''], [7, 21, '', '', ''], [7, 21, '', '', ''], [7, 21, '', '', ''],\
            [7, 21, '', '', ''], [7, 21, '', '', ''], [7, 21, '', '', ''], [7, 21, '', '', ''],\
            [7, 21, '', '', ''], [7, 21, '', '', ''], [7, 21, '', '', ''], [7, 21, '', '', ''],\
            [7, 21, '', '', ''], [7, 21, '', '', ''], [7, 21, '', '', ''], [7, 21, '', '', ''],\
            [7, 21, '', '', ''], [7, 21, '', '', ''], [7, 21, '', '', ''], [7, 21, '', '', ''],\
            [7, 21, '', '', ''], [7, 21, '', '', ''], [7, 21, '', '', ''], [7, 21, '', '', ''],\
            [7, 21, '', '', ''], [7, 21, '', '', ''], [7, 21, '', '', ''], [7, 21, '', '', ''],\
            [7, 21, '', '', ''], [7, 21, '', '', ''], [7, 21, '', '', ''], [7, 21, '', '', ''],\
            [7, 21, '', '', ''], [7, 21, '', '', ''], [7, 21, '', '', '']]

kbrd_map = qwerty
kbrd_map[0x1c] = [2, 13, 'Entree', '', '']

def keyboard_map(l, c):
    i = input("Scancode : ")
    while i:
        if i != "²":
            al =     input("Char   : ")
            bl =     input("Maj    : ")
            cl =     input("Alt Gr : ")
            kbrd_map[int(i, base=16)] = [l,c,al,bl,cl]
        c += 1
        i = input("({}, {}) Scancode : ".format(l,c))
        if i == "":
            l += 1
            c = 0
            i = input("({}, {}) Scancode : ".format(l,c))            

#keyboard_map(4,5)
def print_layout():
    layout = [[""]*21 for i in range(6)]
    i = 0
    for l,c,h,a,b in kbrd_map:
        #print(i, l,c,h,a,b)
        i+=1
        if l < 6 and c <= 20:
            layout[l][c] = h
    for ligne in layout:
        for x in ligne:
            print(x.ljust(4), end = '')
        print()

def max_val():
  j = 0
  for i, a in enumerate(kbrd_map):
    if a != [7, 21, '', '', '']:
      j = i
  return j, i

def hex2(a, n):
    h = hex(a)[2:]
    #print(h)
    assert len(h) <= n
    return ("0" * (n - len(h))) + h

def char(a):
    if len(a) == 1:
        try:
            return hex2(ord(a), 2)
        except AssertionError:
            print(a)
            raise StopIteration
    return '00'

def char1(a):
    if len(a) == 1:
        try:
            return "'{}'".format(a)
        except AssertionError:
            print(a)
            raise StopIteration
    return '0x0'

def c_format():
    i = 0
    for li, co, ch, maj, alt in kbrd_map:
        i += 1
        print("0x{}{}{}{}, ".format(hex2(((li << 5) + co),2), char(ch), char(maj), char(alt)), end = " ")
        if i % 6 == 0:
            print("\n  ", end = "")

def c_special():
    l = []
    for i, s in enumerate(kbrd_map):
        if len(s[2]) > 1:
            l.append(["0x"+hex2(((s[0] << 5) + s[1]),2), s[2], special_n(s[2])])
    l.sort(key=lambda x: x[2])
    for pos, mot, code in l:
        print("  {} -> {}".format(str(code).rjust(3), mot))
    print()
    for pos, mot, code in l:
        print("    case {}: return {}; // {}".format(pos, str(code).rjust(3), mot))
    print()
    for pos, mot, code in l:
        print('    case {}: return kprintf("{}");'.format(code, mot))

def special_n(s):
    if s == "Error":
        return 0
    if s == "F1":
        return 1
    if s == "F2":
        return 2
    if s == "F3":
        return 3
    if s == "F4":
        return 4
    if s == "F5":
        return 5
    if s == "F6":
        return 6
    if s == "F7":
        return 7
    if s == "F8":
        return 8
    if s == "F9":
        return 9
    if s == "F10":
        return 10
    if s == "F11":
        return 11
    if s == "F12":
        return 12

    if s == "Verr Num":
        return 13
    if s == "Verr Maj":
        return 14
    if s == "Ctrl G":
        return 15
    if s == "Ctrl D":
        return 16
    if s == "Maj G":
        return 17
    if s == "Maj D":
        return 18
    if s == "Alt G":
        return 19
    if s == "Alt Gr":
        return 20

    if s == "Esc":
        return 25
    if s == "Backspace":
        return 26
    if s == "Suppr":
        return 27
    if s == "Inser":
        return 28
    if s == "Tab":
        return 29
    if s == "Entree":
        return 30
    if s == "Entree Pav Num":
        return 31
    if s == "Espace":
        return 32

    if s == "Flch H":
        return 40
    if s == "Flch G":
        return 41
    if s == "Flch D":
        return 42
    if s == "Flch B":
        return 43
    if s == "Pg U":
        return 44
    if s == "Pg B":
        return 45
    if s == "Home":
        return 46
